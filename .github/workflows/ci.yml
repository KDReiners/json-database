name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure auth for private submodules (GitHub)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf https://github.com/

      - name: Update shared-config submodule early (for caching)
        run: |
          git submodule update --init --remote --depth 1 config/shared

      - name: Write shared-config commit file
        run: |
          git -C config/shared rev-parse HEAD > shared_config_commit.txt

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            shared_config_commit.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compile Python files (syntax check)
        run: |
          python -m compileall -q bl config || (echo "Syntax errors detected" && exit 1)

      - name: Validate shared JSONs
        if: ${{ hashFiles('config/shared/config/*.json') != '' }}
        run: |
          python - <<'PY'
          import json,glob,sys
          files=glob.glob('config/shared/config/*.json')
          failed=False
          for f in files:
              try:
                  json.load(open(f,'r',encoding='utf-8'))
              except Exception as e:
                  print(f'Invalid JSON: {f}: {e}')
                  failed=True
          sys.exit(1 if failed else 0)
          PY

      - name: Import smoke tests
        run: |
          python - <<'PY'
          import importlib
          modules = [
            'config.paths_config',
            'bl.json_database.churn_json_database',
            'bl.json_database.sql_query_interface',
          ]
          for m in modules:
              importlib.import_module(m)
          print('Smoke imports OK')
          PY

      - name: Outbox smoke test (read directories)
        env:
          OUTBOX_ROOT: ${{ github.workspace }}/.outbox_smoke
        run: |
          python - <<'PY'
          import os
          from pathlib import Path
          from config.paths_config import ProjectPaths
          os.makedirs(os.environ['OUTBOX_ROOT'], exist_ok=True)
          # Prüfen, dass erwartete Pfade korrekt aufgelöst werden (kein Schreibbedarf)
          paths = [
            ProjectPaths.outbox_churn_experiment_directory(1),
            ProjectPaths.outbox_cox_experiment_directory(1),
            ProjectPaths.outbox_counterfactuals_directory() / 'experiment_1',
          ]
          for p in paths:
            print(f'Resolved: {p}')
          PY

      - name: Upload OUTBOX root (if present)
        if: ${{ hashFiles('.outbox_smoke/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: outbox-root-snapshot
          path: ${{ github.workspace }}/.outbox_smoke

      - name: Configure auth for private submodules (GitHub)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf https://github.com/

      - name: Update shared-config submodule to latest
        run: |
          git submodule update --init --remote --depth 1 config/shared

      - name: Print shared-config commit and upload build-info
        run: |
          SHA=$(git -C config/shared rev-parse HEAD)
          echo "shared-config: $SHA"
          echo "shared-config: $SHA" >> $GITHUB_STEP_SUMMARY
          printf "%s" "$SHA" > shared_config_commit.txt
        shell: bash

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: shared_config_commit.txt


